初步介绍一下MySQL的B+树?
在聊到MySQL的时候 \\不得不和面试官 \\聊起B+树
可以罗列一下 \\B+树的特点
1. 单点查询
所有数据都在 \\叶子节点中
所以根据索引查询的时间复杂度是O(logn)
这个复杂度是针对索引的高度 也就是B+树的高度。
由于硬盘的I/O读写速度慢
所以查询时要尽量保持少的磁盘读操作
所以MySQL中的节点都以数据页的形式存储
数据页其实是磁盘的一个最小存储单元
每次读操作从磁盘读取一个数据页
索引被拆分后放到了数据页里
所以在搜索的时候是在数据页之间跳转
最后跳转到带数据的叶子节点数据页
在里面获取信息
对于一个2000万行的数据表 B+树通常有三层高度
而超过一定的阈值之后变为四层
因为要进行四次磁盘读 查询效率会降低
这就是老生常谈的单表2000W
2. 插入和删除节点
由于数据全由双向链表的形式存在叶子节点
插入和删除时只需要添加节点
更改节点之间的指针即可
不需要修改B+树的结构
因此，B+树的插入和删除效率更高
3. 范围查询
由于叶子节点是双向链表
所以在查询到一个节点时
可以快速地进行向前向后遍历
这十分适用于根据某个字段(如日期)归类
然后进行翻页的场景
/music xuebao.mp3
雪豹闭嘴